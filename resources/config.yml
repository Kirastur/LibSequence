# - There are more possible ways to start and stop sequences
# -   1. Use minecraft commands ("/sequence")
# -   2. Use API to control:
# -       a) Local sequenes defined in LibSequence's config.yml
# -       b) Sequences published by other plugins in the Directory
# -       c) Your own squences using the Shared Sequencer   
# -   3. Use private sequencers (java-objects)
# -
# - Furthermore you can register you own actions, checks, includes etc.
# - 
# - If this is not enough customizing for you,
# -   you can extend the the functionality of the sequencer
# -   by inheriting the java config objects
# -
# -
# - Please see our Github Wiki for Documentation
# -      https://github.com/Kirastur/LibSequence/wiki
# -
# - Visit our homepage for more information
# -      https://www.spigotmc.org/resources/libsequence.90664
# -
# - For support you can contact us at discord.
# -      A link to discord can be found on our homepage



# Limit the functionality of this plugin
# 
# - These parameters are only read at startup.
# - They cannot be modified at runtime using the reload-command.
startup:

   # Allow commands for local sequences
   #
   # - Enable this to allow players, console, command-blocks etc.
   # -   to start sequences using commands.
   # - 
   # - Player must have command permission and execute permission for the 
   # -   specific sequence to be allowed to start them.
   # - 
   # - If set to false, the following command is disabled:
   # -     /sequence, 
   # -
   # - Even if false, sequences can be started by API (if API is enabled).
   enableCommands: true
  
   # Allow API to start and cancel sequences
   #
   # - If this options is disabled, the shared sequencer is not started.
   # -
   # - Then a 3rd party plugin must initialize the API
   # - befor the /sequence command can be used.
   # -
   # - If you disable both, API and commands, you can use only
   # - private sequencers using java-pbjects.
   # . 
   # - Note: If sequences are started via API, no permission check is done.
   # - 
   enableAPI: true
   
   # - The LibSequencer is not designed to prohibit the use of private sequencers,
   # -   so there is no config option to prevent this.
   
   # - maxCurrentSequences
   #
   # - Set the maximal numver of currently running sequences
   # - The optimal value depends on your server configuration
   maxCurrentSequences: 20


# Limit the fuctionality of the orchestrator (SequencerAPI)
#
# - Here cou can disable specitic features
# - for security reason or if you want to get more performance       
orchestrator:

   # Enables command action
   #
   # - If set to false, the following actions are disabled:
   # -      command
   # - 
   # - Using commands as part of a sequence is a security risk
   # - because they are executed in the console context.
   # - So we give you the option to disable them
   enableCommandAction: true
  
   # Enables the Chain to track indirect sequence starts
   # e.g. Player => Button => CommandBlock => Sequence
   #
   # - Disable if you do not need interaction-tracking
   # - and get a slight bit more performance 
   #
   enableChainEvents: true
 

# Configure options for the high-level ControllerAPI
#
# - This also affects the /sequence commands 
controller:

   # Enbale Debug
   #
   # - The LibSequence Sequencer does not have any debug output
   # - All Messages are sent to the logger-interface
   #
   # - The Controller receives this messages through the callbackGeneric
   # - so he has to deal with it
   #
   # - If enabled, these messages are printout to the server console
   # - If disabled, these messages are thrown away
   # -
   # -  If an error occures during sequence execution,
   # -  the sender (Player) gets notified if enabled.
   # -
   # - If you need more control about Debug, you must use
   # - you own callback-object together with SequencerAPI
   # 
   enableDebugOutput: false
   
   # - Register the sequences defined in the "sequences" section of
   # - LibSequence's config.yml in the public directory
   publishLocalSequences: true
  
 
# OK, now let's define the sequences. Per default, only a "demo" sequence is here
#
# - You may optionally quote the Strings with "" if the parser has any problems
#
# - Sequence names are case-sensitive
#
sequences:

   demo:
      1:
         action: notify
         message: Sequence is started by %PLAYER%
         message_de_de: Spieler %PLAYER% hat die Sequence gestartet
         include_operator: yes
         include_console: yes
      2:
         action: broadcast
         message: First notification
         wait-after-action: 10
      3:
         action: broadcast
         message: Second notification 10 Seconds later


# Define translation of messages
# 
# - The messages here are only used for the /sequence command.
# - They do not affect ControllerAPI or SequencerAPI
#
# - If no translation is defied, the default english messages are used 
messages:
   de_de:
      MSG_UNKNOWN_OPTION: "Unbekannte Option. Rufe mit '/sequence help' die möglichen Optionen auf"
      MSG_UNKNOWN_SEQUENCE: "Unbekannte Sequence. Eine Liste der verfügbaren Sequences gibt es mit '/sequence list'"
      MSG_OPTION_NAME_MISSING: "Keine Option angegeben. '/sequence help' listet Dir die möglichen Optionen auf"
      MSG_SEQUENCE_NAME_MISSING: "Der Sequence-Name muß angegeben werden"
      MSG_NO_OPTION_PERMISSION: "Du hast keine Berechtigung für diese Option"
      MSG_NO_SEQUENCE_PERMISSION: "Du hast keine Berechtigung für diese Sequence"
      MSG_TOO_MANY_PARAMETERS: "Zu viele Parameter"
      MSG_NOT_RUNNING: "Keine laufenden Sequences gefunden"
      MSG_ALL_OPTION_FORBIDDEN: "Du hast auf keine Optionen hier Rechte"
      MSG_ALL_SEQUENCE_FORBIDDEN: "Du hast keinen Zugriff auf Sequences"
      MSG_NO_API: "Die LibSequence API ist nicht initialisiert"
      MSG_EMPTY: "(Keine)"
      MSG_GENERAL_ERROR: "Fehler:"

      MSG_SEQUENCE_STARTED: "Die Sequence wurde gestartet"
      MSG_SEQUENCE_CANCELLED: "Die Sequence wurde abgebrochen"
      MSG_RELOAD: "Der Reload wurde abgeschlossen"
      MSG_HELP: "Deine möglichen Optionen sind:"
